keycloak.auth-server-url=http://localhost:8080/auth
keycloak.realm=master
keycloak.resource=portfolio-backend
keycloak.public-client=true
keycloak.bearer-only=true
keycloak.credentials.secret=P768deoApF38AYVL2z9TLbHEr9A49rzy

keycloak.security-constraints[0].authRoles[0]=admin
keycloak.security-constraints[0].securityCollections[0].patterns[0]=/api/articles/*
keycloak.security-constraints[0].securityCollections[0].patterns[1]=/api/admin/*

server.port=8081
# spring.security.oauth2.client.registration.keycloak.client-id=portfolio-backend
# spring.security.oauth2.client.registration.keycloak.authorization-grant-type=authorization_code
# spring.security.oauth2.client.registration.keycloak.scope=openid
# spring.security.oauth2.client.provider.keycloak.issuer-uri=http://localhost:8080/realms/PortfolioRealm
# spring.security.oauth2.client.provider.keycloak.user-name-attribute=admin
# spring.security.oauth2.resourceserver.jwt.issuer-uri=http://localhost:8080/realms/PortfolioRealm

# spring.security.oauth2.client.registration.external.provider=portfolio-backend
# spring.security.oauth2.client.registration.external.client-name=PortfolioRealm
# spring.security.oauth2.client.registration.external.client-id=PortfolioRealm
# spring.security.oauth2.client.registration.external.client-secret=8Ro2mWAOWwzNMnGfKpXV1MYB17ZsJBKz
# spring.security.oauth2.client.registration.external.scope=openid,offline_access,profile
# spring.security.oauth2.client.registration.external.authorization-grant-type=authorization_code

# Database URL
spring.datasource.url=jdbc:mysql://localhost:3306/default_db

# Database username
spring.datasource.username=hddev

# Database password
spring.datasource.password=AdminPass1

# Hibernate dialect for MySQL
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQLDialect

spring.jpa.show-sql=true

spring.jpa.properties.hibernate.format_sql=true

spring.jpa.hibernate.ddl-auto=create